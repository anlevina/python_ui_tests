{"uid":"56f076ee4e33d27","name":"Click modal and check its content","fullName":"tests.alerts_frame_windows_test.TestModalDialogs#test_modal_dialog","historyId":"7886e17ec1d37de89c9c997bbad2d911","time":{"start":1725177909761,"stop":1725177912038,"duration":2277},"status":"failed","statusMessage":"AssertionError: Another modal dialog title is expected\nassert '' == 'Small Modal'\n  \n  - Small Modal","statusTrace":"self = <tests.alerts_frame_windows_test.TestAlertsFrameWindows.TestModalDialogs object at 0x7fdce5f69250>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b91c79746c9e503c733a6da104e2b64b\")>\nmodal = 'small', expected_title = 'Small Modal', expected_text_length = 47\n\n    @allure.title('Click modal and check its content')\n    @pytest.mark.parametrize('modal, expected_title, expected_text_length', [\n        ('small', 'Small Modal', 47),\n        ('large', 'Large Modal', 574)\n    ])\n    def test_modal_dialog(self, driver, modal, expected_title, expected_text_length):\n        modal_dialogs_page = ModalDialogsPage(driver, 'https://demoqa.com/modal-dialogs')\n        modal_dialogs_page.open()\n        modal_dialogs_page.remove_footer()\n        title, text_length = modal_dialogs_page.check_modal_dialog(modal)\n    \n>       assert title == expected_title, 'Another modal dialog title is expected'\nE       AssertionError: Another modal dialog title is expected\nE       assert '' == 'Small Modal'\nE         \nE         - Small Modal\n\ntests/alerts_frame_windows_test.py:147: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1725177872209,"stop":1725177872287,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1725177909423,"stop":1725177909761,"duration":338},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Another modal dialog title is expected\nassert '' == 'Small Modal'\n  \n  - Small Modal","statusTrace":"self = <tests.alerts_frame_windows_test.TestAlertsFrameWindows.TestModalDialogs object at 0x7fdce5f69250>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b91c79746c9e503c733a6da104e2b64b\")>\nmodal = 'small', expected_title = 'Small Modal', expected_text_length = 47\n\n    @allure.title('Click modal and check its content')\n    @pytest.mark.parametrize('modal, expected_title, expected_text_length', [\n        ('small', 'Small Modal', 47),\n        ('large', 'Large Modal', 574)\n    ])\n    def test_modal_dialog(self, driver, modal, expected_title, expected_text_length):\n        modal_dialogs_page = ModalDialogsPage(driver, 'https://demoqa.com/modal-dialogs')\n        modal_dialogs_page.open()\n        modal_dialogs_page.remove_footer()\n        title, text_length = modal_dialogs_page.check_modal_dialog(modal)\n    \n>       assert title == expected_title, 'Another modal dialog title is expected'\nE       AssertionError: Another modal dialog title is expected\nE       assert '' == 'Small Modal'\nE         \nE         - Small Modal\n\ntests/alerts_frame_windows_test.py:147: AssertionError","steps":[{"name":"Open an url","time":{"start":1725177909762,"stop":1725177911901,"duration":2139},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Remove browser page footer","time":{"start":1725177911901,"stop":1725177911908,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click modal dialog","time":{"start":1725177911908,"stop":1725177912038,"duration":130},"status":"passed","steps":[{"name":"Check that element is visible","time":{"start":1725177911909,"stop":1725177911925,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'button[id=\"showSmallModal\"]')"},{"name":"timeout","value":"6"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check that element is present","time":{"start":1725177911961,"stop":1725177911971,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div[id=\"example-modal-sizes-title-sm\"]')"},{"name":"timeout","value":"6"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check that element is present","time":{"start":1725177911981,"stop":1725177911990,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div[class=\"modal-body\"]')"},{"name":"timeout","value":"6"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check that element is visible","time":{"start":1725177911996,"stop":1725177912011,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'button[id=\"closeSmallModal\"]')"},{"name":"timeout","value":"6"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"modal","value":"'small'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1725177912107,"stop":1725177912184,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Alerts, Frames and Windows page"},{"name":"feature","value":"Modal dialogs"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestAlertsFrameWindows"},{"name":"host","value":"fv-az1446-75"},{"name":"thread","value":"3154-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.alerts_frame_windows_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_text_length","value":"47"},{"name":"expected_title","value":"'Small Modal'"},{"name":"modal","value":"'small'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"9ff681183c490c61","reportUrl":"https://anlevina.github.io/python_ui_tests/46//#testresult/9ff681183c490c61","status":"passed","time":{"start":1725134569521,"stop":1725134571996,"duration":2475}}]},"tags":[]},"source":"56f076ee4e33d27.json","parameterValues":["47","'Small Modal'","'small'"]}