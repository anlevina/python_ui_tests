{"uid":"7d8a7a5af6750b26","name":"Fill mandatory fields only","fullName":"tests.practice_form_test.TestFillPracticeFormFields#test_fill_only_mandatory_practice_form_fields","historyId":"5ee4d0980448f959aa65e0282e641d38","time":{"start":1725135187187,"stop":1725135193781,"duration":6594},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">...</button> is not clickable at point (1098, 990). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://4f6af8584548dc0d213a10a0f092012a.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-300x250_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"attribution-reporting\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"6\" style=\"border: 0px; vertical-align: bottom; max-height: 30vh !important; overflow: hidden !important; display: block; margin: 0px auto;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x55a9e870f8da <unknown>\n#1 0x55a9e83dde50 <unknown>\n#2 0x55a9e8434346 <unknown>\n#3 0x55a9e843225d <unknown>\n#4 0x55a9e842fcf7 <unknown>\n#5 0x55a9e842eb9c <unknown>\n#6 0x55a9e84224d6 <unknown>\n#7 0x55a9e8452492 <unknown>\n#8 0x55a9e8421e89 <unknown>\n#9 0x55a9e845265e <unknown>\n#10 0x55a9e84709c6 <unknown>\n#11 0x55a9e8452233 <unknown>\n#12 0x55a9e8420093 <unknown>\n#13 0x55a9e842109e <unknown>\n#14 0x55a9e86d6b3b <unknown>\n#15 0x55a9e86daaf1 <unknown>\n#16 0x55a9e86c2705 <unknown>\n#17 0x55a9e86db662 <unknown>\n#18 0x55a9e86a78df <unknown>\n#19 0x55a9e86fe6d8 <unknown>\n#20 0x55a9e86fe8a2 <unknown>\n#21 0x55a9e870e6cc <unknown>\n#22 0x7ffa56e94ac3 <unknown>","statusTrace":"self = <tests.practice_form_test.TestPracticeForm.TestFillPracticeFormFields object at 0x7f980f9b94c0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6179e4abfa6dea2aa2ef0f2350d5269b\")>\n\n    @allure.title('Fill mandatory fields only')\n    def test_fill_only_mandatory_practice_form_fields(self, driver):\n        practice_form_page = PracticeFormPage(driver, 'https://demoqa.com/automation-practice-form')\n        practice_form_page.open()\n        practice_form_page.remove_footer()\n        first_name, last_name, gender, mobile, dob_before, dob_after = practice_form_page.fill_only_mandatory_fields()\n>       practice_form_page.submit()\n\ntests/practice_form_test.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/practice_form_page.py:147: in submit\n    self.element_is_visible(self.locators.SUBMIT).click()\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f980f9bb7a0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a9e86fe8a2 \\\\u003Cunknown>\\\\n#21 0x55a9e870e6cc \\\\u003Cunknown>\\\\n#22 0x7ffa56e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">...</button> is not clickable at point (1098, 990). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://4f6af8584548dc0d213a10a0f092012a.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-300x250_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"attribution-reporting\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"6\" style=\"border: 0px; vertical-align: bottom; max-height: 30vh !important; overflow: hidden !important; display: block; margin: 0px auto;\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=128.0.6613.113)\nE       Stacktrace:\nE       #0 0x55a9e870f8da <unknown>\nE       #1 0x55a9e83dde50 <unknown>\nE       #2 0x55a9e8434346 <unknown>\nE       #3 0x55a9e843225d <unknown>\nE       #4 0x55a9e842fcf7 <unknown>\nE       #5 0x55a9e842eb9c <unknown>\nE       #6 0x55a9e84224d6 <unknown>\nE       #7 0x55a9e8452492 <unknown>\nE       #8 0x55a9e8421e89 <unknown>\nE       #9 0x55a9e845265e <unknown>\nE       #10 0x55a9e84709c6 <unknown>\nE       #11 0x55a9e8452233 <unknown>\nE       #12 0x55a9e8420093 <unknown>\nE       #13 0x55a9e842109e <unknown>\nE       #14 0x55a9e86d6b3b <unknown>\nE       #15 0x55a9e86daaf1 <unknown>\nE       #16 0x55a9e86c2705 <unknown>\nE       #17 0x55a9e86db662 <unknown>\nE       #18 0x55a9e86a78df <unknown>\nE       #19 0x55a9e86fe6d8 <unknown>\nE       #20 0x55a9e86fe8a2 <unknown>\nE       #21 0x55a9e870e6cc <unknown>\nE       #22 0x7ffa56e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1725135178623,"stop":1725135178641,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1725135186814,"stop":1725135187186,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"driver::0","time":{"start":1725135193813,"stop":1725135193888,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Filling practice form fields"},{"name":"suite","value":"Practice form page"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestPracticeForm"},{"name":"host","value":"fv-az525-406"},{"name":"thread","value":"3209-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.practice_form_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"41286f146789626f","reportUrl":"https://anlevina.github.io/python_ui_tests/46//#testresult/41286f146789626f","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">...</button> is not clickable at point (1098, 1002). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://4a2a606c136bb34a112069d8afc4f296.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-300x250_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"attribution-reporting\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"6\" style=\"border: 0px; vertical-align: bottom; max-height: 30vh !important; overflow: hidden !important; display: block; margin: 0px auto;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=128.0.6613.113)\nStacktrace:\n#0 0x55f4a9c718da <unknown>\n#1 0x55f4a993fe50 <unknown>\n#2 0x55f4a9996346 <unknown>\n#3 0x55f4a999425d <unknown>\n#4 0x55f4a9991cf7 <unknown>\n#5 0x55f4a9990b9c <unknown>\n#6 0x55f4a99844d6 <unknown>\n#7 0x55f4a99b4492 <unknown>\n#8 0x55f4a9983e89 <unknown>\n#9 0x55f4a99b465e <unknown>\n#10 0x55f4a99d29c6 <unknown>\n#11 0x55f4a99b4233 <unknown>\n#12 0x55f4a9982093 <unknown>\n#13 0x55f4a998309e <unknown>\n#14 0x55f4a9c38b3b <unknown>\n#15 0x55f4a9c3caf1 <unknown>\n#16 0x55f4a9c24705 <unknown>\n#17 0x55f4a9c3d662 <unknown>\n#18 0x55f4a9c098df <unknown>\n#19 0x55f4a9c606d8 <unknown>\n#20 0x55f4a9c608a2 <unknown>\n#21 0x55f4a9c706cc <unknown>\n#22 0x7fd168694ac3 <unknown>","time":{"start":1725134750354,"stop":1725134755112,"duration":4758}}]},"tags":[]},"source":"7d8a7a5af6750b26.json","parameterValues":[]}